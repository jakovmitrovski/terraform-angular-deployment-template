name: Deploy webapp

on:
  push:
    branches:
      - main

  workflow_dispatch:

permissions:
  contents: read

jobs:
  terraform-validate:
    name: 'Terraform'

    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Setup Git credentials
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.PULL_KEY_REPO }}

      - name: Git Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Add profile credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ vars.AWS_REGION }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.10.0

      - name: Setup Angular CLI
        run: npm install -g @angular/cli > /dev/null

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform -chdir=./infrastructure init -backend-config=./config/backend.conf

      - name: Terraform Format
        run: terraform -chdir=./infrastructure fmt -recursive -check

      - name: Terraform Plan
        run: terraform -chdir=./infrastructure plan -var "aws_region=${{ vars.AWS_REGION }}" -var "app_name=${{ vars.APP_NAME }}" -var "certificate_arn=${{ secrets.AWS_CERTIFICATE_ARN }}" -var "domain_name=${{ vars.DOMAIN_NAME }}"

      - name: Terraform Apply
        run: terraform -chdir=./infrastructure apply -auto-approve -var "aws_region=${{ vars.AWS_REGION }}" -var "app_name=${{ vars.APP_NAME }}" -var "certificate_arn=${{ secrets.CERTIFICATE_ARN }}" -var "domain_name=${{ vars.DOMAIN_NAME }}"